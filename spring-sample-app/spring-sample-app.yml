apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-sample-app
  name: spring-sample-app 
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: spring-sample-app
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: spring-sample-app
spec:
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - spring-sample-app
        from:
          kind: ImageStreamTag
          name: 'spring-sample-app:latest'
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-sample-app       
    spec:
      initContainers:
      - name: pem-to-truststore
        image: registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16
        env:
          - name: ca_bundle
            value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          - name: truststore_jks
            value: /var/run/secrets/java.io/keystores/truststore.jks
          - name: password
            value: changeit    
        command: ['/bin/bash']
        args: ['-c', "csplit -z -f crt- $ca_bundle '/-----BEGIN CERTIFICATE-----/' '{*}' && for file in crt-*; do keytool -import -noprompt -keystore $truststore_jks -file $file -storepass changeit -alias service-$file; done"]
        volumeMounts:
          - name: keystore-volume
            mountPath: /var/run/secrets/java.io/keystores      
      containers:
        - name: spring-sample-app
          image: spring-sample-app:latest
          imagePullPolicy: Always
          env:     
          - name: JAVA_OPTS
            value: -Xmx512m -Djavax.net.ssl.trustStore=/var/run/secrets/java.io/keystores/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit                 
          - name: "VAULT_HOST"
            value: "vault.secret-management.svc"
          - name: "VAULT_PORT"
            value: "8200"           
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:postgresql://postgresql/backend"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 3 
          volumeMounts:
          - name: keystore-volume
            mountPath: /var/run/secrets/java.io/keystores            
      volumes:
      - name: keystore-volume
        emptyDir: {}                                                              
